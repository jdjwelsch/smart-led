{"remainingRequest":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jona/Dokumente/coding/smart-led/raspi/frontend/src/components/SingleLedControl.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/src/components/SingleLedControl.vue","mtime":1586204782821},{"path":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7Ci8vIGltcG9ydCBSYW5nZVNsaWRlciBmcm9tICd2dWUtcmFuZ2Utc2xpZGVyJzsKLy8gaW1wb3J0ICd2dWUtcmFuZ2Utc2xpZGVyL2Rpc3QvdnVlLXJhbmdlLXNsaWRlci5jc3MnOwppbXBvcnQge1NsaWRlcn0gZnJvbSAndnVlLWNvbG9yJzsKCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnU2luZ2xlTGVkQ29udHJvbCcsCiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgLy8gUmFuZ2VTbGlkZXIsCiAgICAgICAgJ3NsaWRlci1waWNrZXInOiBTbGlkZXIsCiAgICB9LAogICAgcHJvcHM6IFsnbmFtZSddLAoKICAgIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBwb3dlcjogZmFsc2UsCiAgICAgICAgICAgIGJyaWdodG5lc3NTbGlkZXJWYWw6IDUwLAogICAgICAgICAgICBoc2xDb2xvcjoge2g6IDIzMywgczogMTAwLCBsOiAwLjV9CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICB0b2dnbGU6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdGhpcy5wb3dlciA9ICF0aGlzLnBvd2VyOwogICAgICAgICAgICB0aGlzLnN3aXRjaF9sZWQodGhpcy5wb3dlcik7CiAgICAgICAgfSwKCiAgICAgICAgc3dpdGNoX2xlZDogZnVuY3Rpb24gKHN0YXRlKSB7CiAgICAgICAgICAgIGNvbnN0IHBhdGggPSAnaHR0cDovLzE5Mi4xNjguMC43ODo1MDAwL2RldmljZXMvJyArIHRoaXMubmFtZTsKICAgICAgICAgICAgY29uc3QgcmdiX29mZiA9IHsncic6IDAsICdnJzogMCwgJ2InOiAwfTsKCiAgICAgICAgICAgIGlmIChzdGF0ZSkgewogICAgICAgICAgICAgICAgYXhpb3MucHV0KHBhdGgsIHRoaXMucmdiQ29sb3IodGhpcy5oc2xDb2xvcikpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5yZ2JDb2xvcih0aGlzLmhzbENvbG9yKSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghc3RhdGUpIHsKICAgICAgICAgICAgICAgIGF4aW9zLnB1dChwYXRoLCByZ2Jfb2ZmKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCgogICAgICAgIC8vIHNldF9sZWRfYnJpZ2h0bmVzczogZnVuY3Rpb24gKHZhbCkgewogICAgICAgIC8vICAgICBjb25zdCBkYXRhX2JyaWdodCA9IHsncic6IDIuNTUgKiB2YWwsICdnJzogMCwgJ2InOiAwfTsKICAgICAgICAvLyAgICAgY29uc3QgcGF0aCA9ICdodHRwOi8vMTkyLjE2OC4wLjc4OjUwMDAvZGV2aWNlcy8nICsgdGhpcy5uYW1lCiAgICAgICAgLy8gICAgIC8vIHNlbmQgcHV0IHJlcXVlc3QgdG8gYmFja2VuZAogICAgICAgIC8vICAgICBheGlvcy5wdXQocGF0aCwgZGF0YV9icmlnaHQpOwogICAgICAgIC8vIH0sCgogICAgICAgIHNldF9jb2xvcigpIHsKICAgICAgICAgICAgLy8gVE9ETyBzZW5kIFJHQiBjb2xvciB0byBiYWNrZW5kCiAgICAgICAgICAgIGNvbnN0IHBhdGggPSAnaHR0cDovLzE5Mi4xNjguMC43ODo1MDAwL2RldmljZXMvJyArIHRoaXMubmFtZQogICAgICAgICAgICBjb25zdCByZ2IgPSB0aGlzLnJnYkNvbG9yKHRoaXMuaHNsQ29sb3IpOwogICAgICAgICAgICBheGlvcy5wdXQocGF0aCwgcmdiKTsKCiAgICAgICAgfSwKCiAgICAgICAgLy8gY29udmVydCBIU0wgdG8gUkdCIGNvbG9yc3BhY2UKICAgICAgICByZ2JDb2xvcihoc2xDb2xvcikgewogICAgICAgICAgICBsZXQgaCA9IGhzbENvbG9yLmhzbC5oOwogICAgICAgICAgICBsZXQgcyA9IGhzbENvbG9yLmhzbC5zOwogICAgICAgICAgICBsZXQgbCA9IGhzbENvbG9yLmhzbC5sCgoKICAgICAgICAgICAgbGV0IGMgPSAoMSAtIE1hdGguYWJzKDIgKiBsIC0gMSkpICogcywKICAgICAgICAgICAgICAgIHggPSBjICogKDEgLSBNYXRoLmFicygoaCAvIDYwKSAlIDIgLSAxKSksCiAgICAgICAgICAgICAgICBtID0gbCAtIGMgLyAyLAogICAgICAgICAgICAgICAgciA9IDAsCiAgICAgICAgICAgICAgICBnID0gMCwKICAgICAgICAgICAgICAgIGIgPSAwOwoKICAgICAgICAgICAgaWYgKDAgPD0gaCAmJiBoIDwgNjApIHsKICAgICAgICAgICAgICAgIHIgPSBjOwogICAgICAgICAgICAgICAgZyA9IHg7CiAgICAgICAgICAgICAgICBiID0gMDsKICAgICAgICAgICAgfSBlbHNlIGlmICg2MCA8PSBoICYmIGggPCAxMjApIHsKICAgICAgICAgICAgICAgIHIgPSB4OwogICAgICAgICAgICAgICAgZyA9IGM7CiAgICAgICAgICAgICAgICBiID0gMDsKICAgICAgICAgICAgfSBlbHNlIGlmICgxMjAgPD0gaCAmJiBoIDwgMTgwKSB7CiAgICAgICAgICAgICAgICByID0gMDsKICAgICAgICAgICAgICAgIGcgPSBjOwogICAgICAgICAgICAgICAgYiA9IHg7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoMTgwIDw9IGggJiYgaCA8IDI0MCkgewogICAgICAgICAgICAgICAgciA9IDA7CiAgICAgICAgICAgICAgICBnID0geDsKICAgICAgICAgICAgICAgIGIgPSBjOwogICAgICAgICAgICB9IGVsc2UgaWYgKDI0MCA8PSBoICYmIGggPCAzMDApIHsKICAgICAgICAgICAgICAgIHIgPSB4OwogICAgICAgICAgICAgICAgZyA9IDA7CiAgICAgICAgICAgICAgICBiID0gYzsKICAgICAgICAgICAgfSBlbHNlIGlmICgzMDAgPD0gaCAmJiBoIDwgMzYwKSB7CiAgICAgICAgICAgICAgICByID0gYzsKICAgICAgICAgICAgICAgIGcgPSAwOwogICAgICAgICAgICAgICAgYiA9IHg7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgciA9IE1hdGgucm91bmQoKHIgKyBtKSAqIDI1NSk7CiAgICAgICAgICAgIGcgPSBNYXRoLnJvdW5kKChnICsgbSkgKiAyNTUpOwogICAgICAgICAgICBiID0gTWF0aC5yb3VuZCgoYiArIG0pICogMjU1KTsKCiAgICAgICAgICAgIGNvbnNvbGUubG9nKHsncic6IHIsICdnJzogZywgJ2InOiBifSkKICAgICAgICAgICAgcmV0dXJuIHsncic6IHIsICdnJzogZywgJ2InOiBifQogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIC8vIGJyaWdodG5lc3NTbGlkZXJWYWw6IGZ1bmN0aW9uICh2YWwpIHsKICAgICAgICAvLyAgICAgdGhpcy5zZXRfbGVkX2JyaWdodG5lc3ModmFsKTsKICAgICAgICAvLwogICAgICAgIC8vIH0sCgogICAgICAgIGhzbENvbG9yKGhzbENvbG9yKSB7CiAgICAgICAgICAgIC8vaHN2MnJnYigpCiAgICAgICAgICAgIGNvbnNvbGUubG9nKGhzbENvbG9yLmhzbC5oKQogICAgICAgICAgICBjb25zb2xlLmxvZyhoc2xDb2xvci5oc2wucykKICAgICAgICAgICAgY29uc29sZS5sb2coaHNsQ29sb3IuaHNsLmwpCiAgICAgICAgICAgIHRoaXMuc2V0X2NvbG9yKCk7CgogICAgICAgIH0KCiAgICB9LAoKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgY29uc29sZS5sb2coU2xpZGVyKQogICAgfQoKfQo="},{"version":3,"sources":["SingleLedControl.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA","file":"SingleLedControl.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"SingleLedControl\">\n        <button @click='toggle()'>On/Off</button>\n        <span v-show='status'>LED on</span>\n        <span v-show='!status'>LED off</span>\n\n<!--        <range-slider-->\n<!--                class=\"slider\"-->\n<!--                min=\"0\"-->\n<!--                max=\"100\"-->\n<!--                step=\"1\"-->\n<!--                v-model=\"brightnessSliderVal\">-->\n<!--        </range-slider>-->\n\n        <div id=\"hsv\">\n            <h2>Here should be the HSV slider</h2>\n            <slider-picker v-model=\"hslColor\"></slider-picker>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    // import RangeSlider from 'vue-range-slider';\n    // import 'vue-range-slider/dist/vue-range-slider.css';\n    import {Slider} from 'vue-color';\n\n\n    export default {\n        name: 'SingleLedControl',\n        components: {\n            // RangeSlider,\n            'slider-picker': Slider,\n        },\n        props: ['name'],\n\n        data: function () {\n            return {\n                power: false,\n                brightnessSliderVal: 50,\n                hslColor: {h: 233, s: 100, l: 0.5}\n            }\n        },\n        methods: {\n            toggle: function () {\n                this.power = !this.power;\n                this.switch_led(this.power);\n            },\n\n            switch_led: function (state) {\n                const path = 'http://192.168.0.78:5000/devices/' + this.name;\n                const rgb_off = {'r': 0, 'g': 0, 'b': 0};\n\n                if (state) {\n                    axios.put(path, this.rgbColor(this.hslColor));\n                    console.log(this.rgbColor(this.hslColor));\n                }\n\n                if (!state) {\n                    axios.put(path, rgb_off);\n                }\n            },\n\n            // set_led_brightness: function (val) {\n            //     const data_bright = {'r': 2.55 * val, 'g': 0, 'b': 0};\n            //     const path = 'http://192.168.0.78:5000/devices/' + this.name\n            //     // send put request to backend\n            //     axios.put(path, data_bright);\n            // },\n\n            set_color() {\n                // TODO send RGB color to backend\n                const path = 'http://192.168.0.78:5000/devices/' + this.name\n                const rgb = this.rgbColor(this.hslColor);\n                axios.put(path, rgb);\n\n            },\n\n            // convert HSL to RGB colorspace\n            rgbColor(hslColor) {\n                let h = hslColor.hsl.h;\n                let s = hslColor.hsl.s;\n                let l = hslColor.hsl.l\n\n\n                let c = (1 - Math.abs(2 * l - 1)) * s,\n                    x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n                    m = l - c / 2,\n                    r = 0,\n                    g = 0,\n                    b = 0;\n\n                if (0 <= h && h < 60) {\n                    r = c;\n                    g = x;\n                    b = 0;\n                } else if (60 <= h && h < 120) {\n                    r = x;\n                    g = c;\n                    b = 0;\n                } else if (120 <= h && h < 180) {\n                    r = 0;\n                    g = c;\n                    b = x;\n                } else if (180 <= h && h < 240) {\n                    r = 0;\n                    g = x;\n                    b = c;\n                } else if (240 <= h && h < 300) {\n                    r = x;\n                    g = 0;\n                    b = c;\n                } else if (300 <= h && h < 360) {\n                    r = c;\n                    g = 0;\n                    b = x;\n                }\n                r = Math.round((r + m) * 255);\n                g = Math.round((g + m) * 255);\n                b = Math.round((b + m) * 255);\n\n                console.log({'r': r, 'g': g, 'b': b})\n                return {'r': r, 'g': g, 'b': b}\n            }\n        },\n        watch: {\n            // brightnessSliderVal: function (val) {\n            //     this.set_led_brightness(val);\n            //\n            // },\n\n            hslColor(hslColor) {\n                //hsv2rgb()\n                console.log(hslColor.hsl.h)\n                console.log(hslColor.hsl.s)\n                console.log(hslColor.hsl.l)\n                this.set_color();\n\n            }\n\n        },\n\n        created() {\n            console.log(Slider)\n        }\n\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}