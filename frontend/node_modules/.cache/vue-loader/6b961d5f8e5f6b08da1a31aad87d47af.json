{"remainingRequest":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/jona/Dokumente/coding/smart-led/raspi/frontend/src/components/SingleLedControl.vue?vue&type=style&index=0&id=0cf0eb2c&scoped=true&lang=css&","dependencies":[{"path":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/src/components/SingleLedControl.vue","mtime":1587219485489},{"path":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jona/Dokumente/coding/smart-led/raspi/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKYnV0dG9uIHsKICAgIHdpZHRoOiA1MCU7CiAgICBoZWlnaHQ6IDQwcHg7Cn0KCgpkaXYgewogICAgbWFyZ2luOiBhdXRvOwp9Cg=="},{"version":3,"sources":["SingleLedControl.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA;;;AAGA;AACA;AACA","file":"SingleLedControl.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"SingleLedControl\">\n        <button @click='toggle()'>{{button_state}}</button>\n\n        <div id=\"ChromePicker\">\n            <chrome-picker class='picker' v-model=\"colors\" :style=\"{width:'400px'}\"></chrome-picker>\n        </div>\n\n    </div>\n</template>\n\n<script>\n    import axios from 'axios';\n    import {Chrome} from 'vue-color';\n\n\n    export default {\n        name: 'SingleLedControl',\n        components: {\n            'chrome-picker': Chrome,\n\n        },\n        props: ['name', 'ServerIp'],\n\n        data: function () {\n            return {\n                power: false,\n                button_state: 'LED on',\n                brightnessSliderVal: 50,\n                colors: {\n                    hex: '#194d33',\n                    hsl: {h: 27, s: 1, l: 0.35, a: 1},\n                    hsv: {h: 150, s: 0.66, v: 0.30, a: 1},\n                    rgba: {r: 100, g: 50, b: 0, a: 1},\n                    a: 1\n                },\n                device_path : 'http://' + this.ServerIp + ':4999/devices/' + this.name,\n            }\n        },\n        methods:\n            {\n                toggle: function () {\n                    this.power = !this.power;\n                    this.switch_led(this.power);\n\n                    if (this.power) {\n                        this.button_state = 'LED off'\n                    } else {\n                        this.button_state = 'LED on'\n                    }\n                }\n                ,\n\n                switch_led: function (state) {\n                    const rgb_off = {'r': 0, 'g': 0, 'b': 0};\n\n                    if (state) {\n                        axios.put(this.device_path, {\n                            'r': this.colors.rgba.r,\n                            'g': this.colors.rgba.g,\n                            'b': this.colors.rgba.b,\n                        });\n                        console.log(this.device_path);\n                        console.log({\n                            'r': this.colors.rgba.r,\n                            'g': this.colors.rgba.g,\n                            'b': this.colors.rgba.b,\n                        });\n                    }\n\n                    if (!state) {\n                        axios.put(this.device_path, rgb_off);\n                    }\n                }\n                ,\n\n                set_color() {\n                    const rgb = {\n                        'r': this.colors.rgba.r,\n                        'g': this.colors.rgba.g,\n                        'b': this.colors.rgba.b,\n                    };\n                    axios.put(this.device_path, rgb);\n\n                },\n            },\n\n        watch: {\n            colors() {\n                this.set_color()\n                if (this.colors.hsl.l > 0) {\n                    this.power = true;\n                }\n\n            },\n        },\n\n        created() {\n            console.log(Chrome);\n            console.log(this.colors);\n        }\n\n    }\n</script>\n<style scoped>\n    button {\n        width: 50%;\n        height: 40px;\n    }\n\n\n    div {\n        margin: auto;\n    }\n</style>"]}]}