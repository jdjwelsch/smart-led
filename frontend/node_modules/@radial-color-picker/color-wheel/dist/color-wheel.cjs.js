/**
 * radial-color-picker/color-wheel v2.2.0
 *
 * https://github.com/radial-color-picker/color-wheel
 *
 * Copyright (c) 2018-present, Rosen Kanev
 * Released under the MIT License.
 */
'use strict';

/**
 * Modified version of Lea Verou's
 * {@link https://github.com/leaverou/conic-gradient conic-gradient}.
 *
 * @example
 * paintColorWheelToCanvas(document.querySelector('#canvas'), 250);
 *
 * @param   {HTMLCanvasElement} canvas Canvas to paint the color wheel
 * @param   {Number}            size   Color wheel radius in pixels
 * @returns {HTMLCanvasElement} canvas The passed canvas for easier chaining
 */
function paintColorWheelToCanvas(canvas, size) {
  var half = size / 2;
  var radius = Math.sqrt(2) * half;
  var deg = Math.PI / 180;
  var pi2 = Math.PI * 2;
  canvas.width = canvas.height = size;
  var ctx = canvas.getContext('2d'); // .02: To prevent empty blank line and corresponding moire
  // only non-alpha colors are cared now

  var thetaOffset = 0.5 * deg + 0.02; // Transform coordinate system so that angles start from the top left, like in CSS

  ctx.translate(half, half);
  ctx.rotate(-Math.PI / 2);
  ctx.translate(-half, -half);

  for (var i = 0; i < 360; i += 0.5) {
    ctx.fillStyle = "hsl(" + i + ", 100%, 50%)";
    ctx.beginPath();
    ctx.moveTo(half, half);
    var beginArg = i * deg;
    var endArg = Math.min(pi2, beginArg + thetaOffset);
    ctx.arc(half, half, radius, beginArg, endArg);
    ctx.closePath();
    ctx.fill();
  }

  return canvas;
}

module.exports = paintColorWheelToCanvas;
